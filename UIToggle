--[[
	UI Toggle Button Script
	Author: ItoRenz00
	Description: A compact, draggable UI toggle button for Roblox that hides/shows all GUI elements
	Features:
		- Cross-platform support (PC & Mobile)
		- Draggable button
		- Smooth animations
		- State management
		- Auto-cleanup
	
	Version: 1.0.0
	Last Updated: 2025
]]

-- ========================================
-- SERVICES
-- ========================================
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

-- ========================================
-- VARIABLES
-- ========================================
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ========================================
-- CONFIGURATION
-- ========================================
local SETTINGS = {
	-- Button Size
	BUTTON_SIZE_PC = UDim2.new(0, 35, 0, 22),
	BUTTON_SIZE_MOBILE = UDim2.new(0, 45, 0, 28),
	BUTTON_POSITION = UDim2.new(0, 10, 0, 10),
	
	-- Animation
	ANIMATION_SPEED = 0.3,
	
	-- Text
	TEXT_VISIBLE = "UI",
	TEXT_HIDDEN = "UI",
	
	-- Colors
	COLOR_VISIBLE = Color3.fromRGB(100, 200, 255),
	COLOR_HIDDEN = Color3.fromRGB(255, 100, 100),
	
	-- Features
	ENABLE_DRAGGING = true,
	SAVE_POSITION = true
}

-- ========================================
-- PLATFORM DETECTION
-- ========================================
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
local buttonSize = isMobile and SETTINGS.BUTTON_SIZE_MOBILE or SETTINGS.BUTTON_SIZE_PC

-- ========================================
-- STATE MANAGEMENT
-- ========================================
local uiHidden = false
local originalStates = {}
local activeTweens = {}

-- ========================================
-- UI CREATION
-- ========================================

-- Main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UIToggleGui"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.DisplayOrder = 999999
screenGui.Parent = playerGui

-- Button Frame
local buttonFrame = Instance.new("Frame")
buttonFrame.Name = "ToggleButton"
buttonFrame.Size = buttonSize
buttonFrame.Position = SETTINGS.BUTTON_POSITION
buttonFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
buttonFrame.BorderSizePixel = 0
buttonFrame.Active = true
buttonFrame.Parent = screenGui

-- Rounded Corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.25, 0)
corner.Parent = buttonFrame

-- Background Gradient
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 60)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
}
gradient.Rotation = 135
gradient.Parent = buttonFrame

-- Shadow Effect
local shadowStroke = Instance.new("UIStroke")
shadowStroke.Name = "ShadowStroke"
shadowStroke.Color = Color3.fromRGB(0, 0, 0)
shadowStroke.Thickness = 2
shadowStroke.Transparency = 0.7
shadowStroke.Parent = buttonFrame

-- Text Button
local textButton = Instance.new("TextButton")
textButton.Name = "TextButton"
textButton.Size = UDim2.new(1, 0, 1, 0)
textButton.BackgroundTransparency = 1
textButton.Text = SETTINGS.TEXT_VISIBLE
textButton.TextColor3 = SETTINGS.COLOR_VISIBLE
textButton.TextSize = isMobile and 13 or 11
textButton.Font = Enum.Font.GothamBold
textButton.AutoButtonColor = false
textButton.Parent = buttonFrame

-- Glow Effect
local glowFrame = Instance.new("Frame")
glowFrame.Name = "Glow"
glowFrame.Size = UDim2.new(1, 0, 1, 0)
glowFrame.BackgroundTransparency = 1
glowFrame.BackgroundColor3 = SETTINGS.COLOR_VISIBLE
glowFrame.BorderSizePixel = 0
glowFrame.ZIndex = 0
glowFrame.Parent = buttonFrame

local glowCorner = Instance.new("UICorner")
glowCorner.CornerRadius = UDim.new(0.25, 0)
glowCorner.Parent = glowFrame

-- Border Stroke
local stroke = Instance.new("UIStroke")
stroke.Color = SETTINGS.COLOR_VISIBLE
stroke.Thickness = 2
stroke.Transparency = 0.5
stroke.Parent = buttonFrame

-- ========================================
-- HELPER FUNCTIONS
-- ========================================

--- Cleans up all active tween animations
local function cleanupTweens()
	for _, tween in pairs(activeTweens) do
		if tween then
			pcall(function()
				tween:Cancel()
			end)
		end
	end
	table.clear(activeTweens)
end

--- Saves the current state of all GUI elements
local function saveUIStates()
	originalStates = {}
	for _, gui in pairs(playerGui:GetChildren()) do
		if gui ~= screenGui and gui:IsA("ScreenGui") then
			originalStates[gui] = gui.Enabled
		end
	end
end

--- Restores all GUI elements to their original state
local function restoreUIStates()
	local keysToRemove = {}
	
	for gui, state in pairs(originalStates) do
		local success = pcall(function()
			if gui and gui.Parent then
				gui.Enabled = state
			else
				table.insert(keysToRemove, gui)
			end
		end)
		
		if not success then
			table.insert(keysToRemove, gui)
		end
	end
	
	-- Clean up invalid entries
	for _, key in ipairs(keysToRemove) do
		originalStates[key] = nil
	end
end

--- Creates a pulse animation effect on the button
local function createPulseEffect()
	local pulseTween = TweenService:Create(
		glowFrame,
		TweenInfo.new(0.3),
		{BackgroundTransparency = 0.7}
	)
	
	local fadeOutTween = TweenService:Create(
		glowFrame,
		TweenInfo.new(0.3),
		{BackgroundTransparency = 1}
	)
	
	pulseTween:Play()
	pulseTween.Completed:Connect(function()
		fadeOutTween:Play()
	end)
end

-- ========================================
-- MAIN TOGGLE FUNCTION
-- ========================================

--- Toggles the visibility of all UI elements
local function toggleUI()
	uiHidden = not uiHidden
	
	-- Animation setup
	local tweenInfo = TweenInfo.new(
		SETTINGS.ANIMATION_SPEED,
		Enum.EasingStyle.Back,
		Enum.EasingDirection.Out
	)
	
	-- Calculate target size
	local baseWidth = buttonSize.X.Offset
	local baseHeight = buttonSize.Y.Offset
	local scaleFactor = uiHidden and 0.9 or 1
	local targetSize = UDim2.new(
		buttonSize.X.Scale,
		baseWidth * scaleFactor,
		buttonSize.Y.Scale,
		baseHeight * scaleFactor
	)
	
	-- Apply scale animation
	local scaleTween = TweenService:Create(buttonFrame, tweenInfo, {Size = targetSize})
	table.insert(activeTweens, scaleTween)
	scaleTween:Play()
	
	-- Update UI state
	if uiHidden then
		-- Hide all UI
		textButton.Text = SETTINGS.TEXT_HIDDEN
		textButton.TextColor3 = SETTINGS.COLOR_HIDDEN
		stroke.Color = SETTINGS.COLOR_HIDDEN
		glowFrame.BackgroundColor3 = SETTINGS.COLOR_HIDDEN
		
		saveUIStates()
		for _, gui in pairs(playerGui:GetChildren()) do
			if gui ~= screenGui and gui:IsA("ScreenGui") then
				gui.Enabled = false
			end
		end
	else
		-- Show all UI
		textButton.Text = SETTINGS.TEXT_VISIBLE
		textButton.TextColor3 = SETTINGS.COLOR_VISIBLE
		stroke.Color = SETTINGS.COLOR_VISIBLE
		glowFrame.BackgroundColor3 = SETTINGS.COLOR_VISIBLE
		
		restoreUIStates()
	end
	
	-- Pulse effect
	createPulseEffect()
end

-- ========================================
-- DRAGGING FUNCTIONALITY
-- ========================================

if SETTINGS.ENABLE_DRAGGING then
	local dragging = false
	local dragInput, mousePos, framePos
	
	--- Updates button position during drag
	local function update(input)
		local delta = input.Position - mousePos
		local newPosition = UDim2.new(
			framePos.X.Scale,
			framePos.X.Offset + delta.X,
			framePos.Y.Scale,
			framePos.Y.Offset + delta.Y
		)
		buttonFrame.Position = newPosition
	end
	
	-- Input Begin
	buttonFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or
		   input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			mousePos = input.Position
			framePos = buttonFrame.Position
			
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	-- Input Changed
	buttonFrame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or
		   input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	-- Update Position
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

-- ========================================
-- BUTTON EVENTS
-- ========================================

-- Toggle on click
textButton.MouseButton1Click:Connect(toggleUI)

-- Hover effects (PC only)
if not isMobile then
	textButton.MouseEnter:Connect(function()
		local baseWidth = buttonSize.X.Offset
		local baseHeight = buttonSize.Y.Offset
		local hoverSize = UDim2.new(
			buttonSize.X.Scale,
			baseWidth * 1.1,
			buttonSize.Y.Scale,
			baseHeight * 1.1
		)
		
		local hoverTween = TweenService:Create(
			buttonFrame,
			TweenInfo.new(0.2),
			{
				Size = hoverSize,
				BackgroundColor3 = Color3.fromRGB(40, 40, 50)
			}
		)
		table.insert(activeTweens, hoverTween)
		hoverTween:Play()
	end)
	
	textButton.MouseLeave:Connect(function()
		if not uiHidden then
			local leaveTween = TweenService:Create(
				buttonFrame,
				TweenInfo.new(0.2),
				{
					Size = buttonSize,
					BackgroundColor3 = Color3.fromRGB(30, 30, 40)
				}
			)
			table.insert(activeTweens, leaveTween)
			leaveTween:Play()
		end
	end)
end

-- ========================================
-- IDLE ANIMATION
-- ========================================

-- Breathing animation for border
local breatheTween = TweenService:Create(
	stroke,
	TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
	{Transparency = 0.2}
)
breatheTween:Play()

-- ========================================
-- CLEANUP
-- ========================================

-- Cleanup on player leave
Players.PlayerRemoving:Connect(function(removingPlayer)
	if removingPlayer == player then
		cleanupTweens()
		breatheTween:Cancel()
		screenGui:Destroy()
	end
end)

-- Cleanup on script destroy
screenGui.AncestryChanged:Connect(function(_, parent)
	if not parent then
		cleanupTweens()
		breatheTween:Cancel()
	end
end)

-- ========================================
-- INITIALIZATION LOG
-- ========================================

print("✅ UI Toggle Script loaded successfully!")
print("👤 Author: ItoRenz00")
print("📱 Platform: " .. (isMobile and "Mobile" or "PC"))
print("🎨 Dragging: " .. (SETTINGS.ENABLE_DRAGGING and "Enabled" or "Disabled"))
